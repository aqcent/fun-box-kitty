{"version":3,"sources":["img/cat.png","components/KittyCard/KittyCardFooter.js","components/KittyCard/KittyCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","KittyCardFooter","flavoured","description","status","clickHandler","cardFooterText","className","onClick","KittyCard","props","state","data","available","statesList","Default","Disabled","mouseOverHandler","setState","DefaultHover","Selected","SelectedHover","mouseOutHandler","id","updateCart","bind","cardTitleText","this","num","onMouseEnter","onMouseLeave","undefined","width","height","viewBox","points","clipPath","portions","gift","style","backgroundImage","cat","weight","React","Component","Product","Math","trunc","App","cart","Set","has","delete","add","e","products","mock","map","x","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,iC,+rCC6B5BC,MA1Bf,YAA0E,IAAhDC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,aAClDC,EAAiB,GASrB,OARAA,EAAiB,oKACc,0BACvBC,UAAU,WACVC,QAASH,GACT,uDAHuB,MAOvBD,GACJ,IAAK,WACDE,EAAiB,kFAAgBJ,EAAhB,kEACjB,MACJ,IAAK,WACL,IAAK,gBACDI,EAAiB,6BAAMH,GAG/B,OACI,yBAAKI,UAAU,eACVD,I,sBCbPG,E,kDAUF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAOVC,MAAQ,CACJP,OAAQ,EAAKM,MAAME,KAAKC,UAAYJ,EAAUK,WAAWC,QAAUN,EAAUK,WAAWE,UATzE,EAYnBC,iBAAmB,WAEX,EAAKN,MAAMP,SAAWK,EAAUK,WAAWC,SAC3C,EAAKG,SAAS,CAAEd,OAAQK,EAAUK,WAAWK,eAE7C,EAAKR,MAAMP,SAAWK,EAAUK,WAAWM,UAC3C,EAAKF,SAAS,CAAEd,OAAQK,EAAUK,WAAWO,iBAlBlC,EAsBnBC,gBAAkB,WAEV,EAAKX,MAAMP,SAAWK,EAAUK,WAAWK,cAC3C,EAAKD,SAAS,CAAEd,OAAQK,EAAUK,WAAWC,UAE7C,EAAKJ,MAAMP,SAAWK,EAAUK,WAAWO,eAC3C,EAAKH,SAAS,CAAEd,OAAQK,EAAUK,WAAWM,YA5BlC,EA+BnBf,aAAe,SAACkB,GAER,EAAKZ,MAAMP,SAAWK,EAAUK,WAAWO,eAAiB,EAAKV,MAAMP,SAAWK,EAAUK,WAAWM,UACvG,EAAKF,SAAS,CAAEd,OAAQK,EAAUK,WAAWK,eAE7C,EAAKR,MAAMP,SAAWK,EAAUK,WAAWK,cAAgB,EAAKR,MAAMP,SAAWK,EAAUK,WAAWC,SACtG,EAAKG,SAAS,CAAEd,OAAQK,EAAUK,WAAWM,WAEjD,EAAKV,MAAMc,WAAWD,IApCtB,EAAKN,iBAAmB,EAAKA,iBAAiBQ,KAAtB,gBACxB,EAAKH,gBAAkB,EAAKA,gBAAgBG,KAArB,gBACvB,EAAKpB,aAAe,EAAKA,aAAaoB,KAAlB,gBALL,E,qDA0CT,IAAD,OACDC,EAAgB,+IAChBC,KAAKhB,MAAMP,SAAWK,EAAUK,WAAWO,gBAC3CK,EAAgB,2FAEpB,IA/DaE,EA+DTrB,EAAS,oBAAgBoB,KAAKhB,MAAMP,QAExC,OACI,yBAAKG,UAAWA,GACZ,yBAAKA,UAAU,UACXsB,aAAcF,KAAKV,iBACnBa,aAAcH,KAAKL,gBACnBd,QAASmB,KAAKhB,MAAMP,SAAWK,EAAUK,WAAWE,SAAY,kBAAM,EAAKX,aAAa,EAAKK,MAAME,KAAKW,UAAOQ,GAC/G,yBAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,eACpC,8BAAUX,GAAG,aACT,6BAASY,OAAO,mCAEpB,0BAAM5B,UAAU,aAAayB,MAAM,OAAOC,OAAO,OAAOG,SAAS,qBAErE,yBAAK7B,UAAU,WACX,yBAAKyB,MAAM,OAAOC,OAAO,OAAOC,QAAQ,eACpC,8BAAUX,GAAG,aACT,6BAASY,OAAO,mCAEpB,0BAAM5B,UAAU,kBAAkByB,MAAM,OAAOC,OAAO,OAAOG,SAAS,qBAE1E,yBAAK7B,UAAU,mBACX,gCACI,uBAAGA,UAAU,cAAcmB,GAC3B,uBAAGnB,UAAU,gBAAb,8CACA,uBAAGA,UAAU,aAAaoB,KAAKjB,MAAME,KAAKV,YAE9C,6BAASK,UAAU,QACf,2BAAG,2BAAIoB,KAAKjB,MAAME,KAAKyB,UAAvB,yCACA,2BACI,2BAAIV,KAAKjB,MAAME,KAAK0B,KAAO,GAAKX,KAAKjB,MAAME,KAAK0B,KAAhD,MA7FfV,EA8F4BD,KAAKjB,MAAME,KAAK0B,MA7FnD,EAAU,iCAChBV,EAAM,EAAU,2BACb,2BAyFqB,yDAQZ,yBAAKrB,UAAU,WAAWgC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,IAAT,QAClD,yBAAKlC,UAAU,cACX,uBAAGA,UAAU,qBAAqBoB,KAAKjB,MAAME,KAAK8B,QAClD,uBAAGnC,UAAU,sBAAb,kBAGR,kBAAC,EAAD,CACIL,UAAWyB,KAAKjB,MAAME,KAAKV,UAC3BC,YAAawB,KAAKjB,MAAME,KAAKT,YAC7BC,OAAQuB,KAAKhB,MAAMP,OACnBC,aAAcsB,KAAKtB,oB,GAxGfsC,IAAMC,WAAxBnC,EAEKK,WAAa,CAChBC,QAAS,UACTI,aAAc,eACdC,SAAU,WACVC,cAAe,gBACfL,SAAU,YAuGHP,Q,SCpHToC,E,WACJ,cAAqF,IAAvEtB,EAAsE,EAAtEA,GAAsE,IAAlErB,iBAAkE,MAAtD,GAAsD,MAAlDwC,cAAkD,MAAzC,EAAyC,MAAtCvC,mBAAsC,MAAxB,GAAwB,MAApBU,iBAAoB,6BAClFc,KAAKJ,GAAKA,EACVI,KAAKzB,UAAYA,EACjByB,KAAKxB,YAAcA,EACnBwB,KAAKe,OAASA,EACdf,KAAKd,UAAYA,E,qDAEF,OAAqB,GAAdc,KAAKe,S,2BAChB,OAAOI,KAAKC,MAAMpB,KAAKU,SAAW,Q,KAiClCW,MA9Bf,WAGE,IAAMC,EAAO,IAAIC,IACX1B,EAAa,SAACD,GAClB,IACO0B,EAAKE,IAAI5B,GACT0B,EAAKG,OAAO7B,GADE0B,EAAKI,IAAI9B,GAG9B,MAAO+B,MAKHC,EAAWC,EACdC,KAAI,SAAAC,GAAC,OAAI,IAAIb,EAAQa,MACrBD,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAW9C,KAAM8C,EAAGlC,WAAYA,EAAYmC,IAAKD,EAAEnC,QAE/D,OACE,yBAAKhB,UAAU,OACb,4BAAQA,UAAU,cAAlB,sIAGA,yBAAKA,UAAU,qBACZgD,KC7BWK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8a990ceb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.d334fe47.png\";","import React from 'react';\r\nimport './KittyCard.css';\r\n\r\nfunction KittyCardFooter({flavoured, description, status, clickHandler}) {\r\n    let cardFooterText = ''\r\n    cardFooterText = <div>\r\n        Чего сидишь? Порадуй котэ, <span\r\n            className='buy-link'\r\n            onClick={clickHandler}>\r\n            <a>купи</a>.\r\n            </span>\r\n    </div>\r\n    \r\n    switch (status) {\r\n        case 'Disabled':\r\n            cardFooterText = <div>Печалька, {flavoured} закончился.</div>\r\n            break\r\n        case 'Selected':\r\n        case 'SelectedHover':\r\n            cardFooterText = <div>{description}</div>\r\n            break\r\n    }\r\n    return (\r\n        <div className=\"card-footer\">\r\n            {cardFooterText}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default KittyCardFooter;\r\n","import React from 'react';\r\nimport './KittyCard.css';\r\nimport KittyCardFooter from './KittyCardFooter'\r\nimport cat from '../../img/cat.png'\r\n\r\nfunction mouseHelper(num) {\r\n    if (num > 4) return 'мышей'\r\n    if (num > 0) return 'мыши'\r\n    return 'мышь'\r\n}\r\n\r\nclass KittyCard extends React.Component {\r\n\r\n    static statesList = {\r\n        Default: 'Default',\r\n        DefaultHover: 'DefaultHover',\r\n        Selected: 'Selected',\r\n        SelectedHover: 'SelectedHover',\r\n        Disabled: 'Disabled'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.mouseOverHandler = this.mouseOverHandler.bind(this);\r\n        this.mouseOutHandler = this.mouseOutHandler.bind(this);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    state = {\r\n        status: this.props.data.available ? KittyCard.statesList.Default : KittyCard.statesList.Disabled\r\n    }\r\n\r\n    mouseOverHandler = () => {\r\n\r\n        if (this.state.status === KittyCard.statesList.Default)\r\n            this.setState({ status: KittyCard.statesList.DefaultHover })\r\n\r\n        if (this.state.status === KittyCard.statesList.Selected)\r\n            this.setState({ status: KittyCard.statesList.SelectedHover })\r\n\r\n    }\r\n\r\n    mouseOutHandler = () => {\r\n\r\n        if (this.state.status === KittyCard.statesList.DefaultHover)\r\n            this.setState({ status: KittyCard.statesList.Default })\r\n\r\n        if (this.state.status === KittyCard.statesList.SelectedHover)\r\n            this.setState({ status: KittyCard.statesList.Selected })\r\n    }\r\n\r\n    clickHandler = (id) => {\r\n\r\n        if (this.state.status === KittyCard.statesList.SelectedHover || this.state.status === KittyCard.statesList.Selected)\r\n            this.setState({ status: KittyCard.statesList.DefaultHover })\r\n\r\n        if (this.state.status === KittyCard.statesList.DefaultHover || this.state.status === KittyCard.statesList.Default)\r\n            this.setState({ status: KittyCard.statesList.Selected })\r\n\r\n        this.props.updateCart(id)\r\n    }\r\n\r\n    render() {\r\n        let cardTitleText = 'Сказочное заморское яство'\r\n        if (this.state.status === KittyCard.statesList.SelectedHover)\r\n            cardTitleText = 'Котэ не одобряет?'\r\n\r\n        let className = `KittyCard ${this.state.status}`\r\n\r\n        return (\r\n            <div className={className}>\r\n                <div className='wrapper'\r\n                    onMouseEnter={this.mouseOverHandler}\r\n                    onMouseLeave={this.mouseOutHandler}\r\n                    onClick={this.state.status !== KittyCard.statesList.Disabled ? (() => this.clickHandler(this.props.data.id)) : undefined}>\r\n                    <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 320 482\">\r\n                        <clipPath id=\"clipPath1\">\r\n                            <polygon points=\"0,50 50,0 320,0 320,482 0,482\" />\r\n                        </clipPath>\r\n                        <rect className=\"svg-border\" width=\"100%\" height=\"100%\" clipPath=\"url(#clipPath1)\" />\r\n                    </svg>\r\n                    <div className=\"content\">\r\n                        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 312 474\">\r\n                            <clipPath id=\"clipPath2\">\r\n                                <polygon points=\"0,48 48,0 318,0 318,480 0,480\" />\r\n                            </clipPath>\r\n                            <rect className=\"svg-sub-content\" width=\"100%\" height=\"100%\" clipPath=\"url(#clipPath2)\" />\r\n                        </svg>\r\n                        <div className=\"content-wrapper\">\r\n                            <header>\r\n                                <p className='card-title'>{cardTitleText}</p>\r\n                                <p className='company-name'>Нямушка</p>\r\n                                <p className='flavoured'>{this.props.data.flavoured}</p>\r\n                            </header>\r\n                            <article className='info'>\r\n                                <p><b>{this.props.data.portions}</b> порций</p>\r\n                                <p>\r\n                                    <b>{this.props.data.gift > 1 && this.props.data.gift} </b>\r\n                                    {mouseHelper(this.props.data.gift)} в подарок\r\n                            </p>\r\n                            </article>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"card-img\" style={{ backgroundImage: `url(${cat})` }}></div>\r\n                    <div className='weight-tag'>\r\n                        <p className='weight-tag-number'>{this.props.data.weight}</p>\r\n                        <p className='weight-tag-measure'>кг</p>\r\n                    </div>\r\n                </div>\r\n                <KittyCardFooter\r\n                    flavoured={this.props.data.flavoured}\r\n                    description={this.props.data.description}\r\n                    status={this.state.status}\r\n                    clickHandler={this.clickHandler} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default KittyCard;\r\n","import React from 'react';\nimport './App.css';\nimport KittyCard from './components/KittyCard/KittyCard'\nimport mock from './sample-data.json'\n\nclass Product {\n  constructor({ id, flavoured = '', weight = 0, description = '', available = true }) {\n    this.id = id\n    this.flavoured = flavoured\n    this.description = description\n    this.weight = weight\n    this.available = available\n  }\n  get portions() { return this.weight * 20 }\n  get gift() { return Math.trunc(this.portions / 20) }\n}\n\nfunction App() {\n\n  //--- Заглушка под корзину, проверить обратную связь\n  const cart = new Set()\n  const updateCart = (id) => {\n    try {\n      if (!cart.has(id)) cart.add(id)\n      else cart.delete(id)\n    }\n    catch (e) {\n      //throw new Error(e)\n    }\n  }\n\n  const products = mock\n    .map(x => new Product(x))\n    .map(x => <KittyCard data={x} updateCart={updateCart} key={x.id} />)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Ты сегодня покормил кота?\n      </header>      \n      <div className='Product-Container'>\n        {products}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'css-vars-ponyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}